@model HManagSys.Models.ViewModels.Stock.TransfersListViewModel
@{
    ViewData["Title"] = "Gestion des Transferts";
    var isSuperAdmin = ViewContext.HttpContext.Session.GetString("CurrentRole") == "SuperAdmin";
}

<div class="container-fluid">
    <!-- En-tête avec titre et actions -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-1">
                        <i class="fas fa-exchange-alt text-primary"></i>
                        Gestion des Transferts
                    </h1>
                    <p class="text-muted mb-0">Transferts de produits entre centres</p>
                </div>
                <div class="d-flex gap-2">
                    @if (isSuperAdmin)
                    {
                        <a asp-action="Request" class="btn btn-success">
                            <i class="fas fa-plus"></i>
                            Nouvelle demande
                        </a>
                    }
                    <a asp-action="History" class="btn btn-outline-secondary">
                        <i class="fas fa-history"></i>
                        Historique
                    </a>
                    <button type="button" class="btn btn-outline-primary" onclick="refreshData()">
                        <i class="fas fa-sync-alt"></i>
                        Actualiser
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistiques rapides -->
    <div class="row mb-4">
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-primary text-white h-100">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col">
                            <p class="text-white-50 small mb-1">Total Transferts</p>
                            <h3 class="mb-0">@Model.Statistics.TotalTransfers</h3>
                            <small class="text-white-75">Tous statuts confondus</small>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-exchange-alt fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-warning text-dark h-100">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col">
                            <p class="text-dark-50 small mb-1">En attente</p>
                            <h3 class="mb-0">@(Model.Statistics.PendingTransfers + Model.Statistics.ApprovedTransfers)</h3>
                            <small class="text-dark-75">Demandés ou approuvés</small>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-hourglass-half fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-success text-white h-100">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col">
                            <p class="text-white-50 small mb-1">Complétés</p>
                            <h3 class="mb-0">@Model.Statistics.CompletedTransfers</h3>
                            <small class="text-white-75">@Model.Statistics.CompletionRate.ToString("F1")% de réussite</small>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-check-circle fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-danger text-white h-100">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col">
                            <p class="text-white-50 small mb-1">Rejetés/Annulés</p>
                            <h3 class="mb-0">@(Model.Statistics.RejectedTransfers + Model.Statistics.CancelledTransfers)</h3>
                            <small class="text-white-75">@Model.Statistics.RejectionRate.ToString("F1")% de rejet</small>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-times-circle fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filtres -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" action="@Url.Action("Index")" id="filtersForm">
                <div class="row align-items-end">
                    <div class="col-md-2">
                        <label class="form-label">Statut</label>
                        <select class="form-select" name="Status">
                            <option value="">Tous</option>
                            <option value="Requested" selected="@(Model.Filters.Status == "Requested")">Demandés</option>
                            <option value="Pending" selected="@(Model.Filters.Status == "Pending")">En attente</option>
                            <option value="Approved" selected="@(Model.Filters.Status == "Approved")">Approuvés</option>
                            <option value="Completed" selected="@(Model.Filters.Status == "Completed")">Complétés</option>
                            <option value="Rejected" selected="@(Model.Filters.Status == "Rejected")">Rejetés</option>
                            <option value="Cancelled" selected="@(Model.Filters.Status == "Cancelled")">Annulés</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Centre source</label>
                        <select class="form-select" name="FromCenterId">
                            <option value="">Tous</option>
                            @foreach (var center in Model.AvailableCenters)
                            {
                                <option value="@center.Value" selected="@(Model.Filters.FromCenterId == int.Parse(center.Value))">
                                    @center.Text
                                </option>
                            }
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Centre destination</label>
                        <select class="form-select" name="ToCenterId">
                            <option value="">Tous</option>
                            @foreach (var center in Model.AvailableCenters)
                            {
                                <option value="@center.Value" selected="@(Model.Filters.ToCenterId == int.Parse(center.Value))">
                                    @center.Text
                                </option>
                            }
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Période (jours)</label>
                        <select class="form-select" name="Days">
                            <option value="7" selected="@(Model.Filters.Days == 7)">7 jours</option>
                            <option value="30" selected="@(Model.Filters.Days == 30 || Model.Filters.Days == 0)">30 jours</option>
                            <option value="90" selected="@(Model.Filters.Days == 90)">3 mois</option>
                            <option value="180" selected="@(Model.Filters.Days == 180)">6 mois</option>
                            <option value="365" selected="@(Model.Filters.Days == 365)">1 an</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <div class="form-check form-switch mt-4">
                            <input class="form-check-input" type="checkbox" name="OnlyMyRequests" value="true" id="onlyMyRequests" checked="@Model.Filters.OnlyMyRequests">
                            <label class="form-check-label" for="onlyMyRequests">Uniquement mes demandes</label>
                        </div>
                    </div>
                    <div class="col-md-1">
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-12">
                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="clearFilters()">
                            <i class="fas fa-times"></i>
                            Effacer les filtres
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    
    <!-- Approbations en attente (pour SuperAdmin) -->
    @if (isSuperAdmin && Model.PendingApprovals.Any())
    {
        <div class="card mb-4 border-warning">
            <div class="card-header bg-warning text-dark">
                <h5 class="card-title mb-0">
                    <i class="fas fa-exclamation-triangle"></i>
                    Transferts en attente d'approbation (@Model.PendingApprovals.Count)
                </h5>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-striped table-hover mb-0">
                        <thead class="table-warning">
                            <tr>
                                <th>ID</th>
                                <th>Produit</th>
                                <th>Quantité</th>
                                <th>Centre destination</th>
                                <th>Demandé le</th>
                                <th>Demandé par</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var transfer in Model.PendingApprovals)
                            {
                                <tr>
                                    <td>@transfer.Id</td>
                                    <td>
                                        <strong>@transfer.ProductName</strong>
                                        <div class="small text-muted">@transfer.ProductCategory</div>
                                    </td>
                                    <td>
                                        <span class="fw-bold @(transfer.HasEnoughStock ? "text-success" : "text-danger")">
                                            @transfer.QuantityText
                                        </span>
                                        @if (!transfer.HasEnoughStock)
                                        {
                                            <div class="badge bg-danger">Stock insuffisant</div>
                                        }
                                    </td>
                                    <td>@transfer.ToHospitalCenterName</td>
                                    <td>@transfer.RequestDate.ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>@transfer.RequestedByName</td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@transfer.Id" class="btn btn-sm btn-outline-primary">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <button type="button" class="btn btn-sm btn-outline-success" onclick="showApprovalModal(@transfer.Id)">
                                                <i class="fas fa-check"></i>
                                            </button>
                                            <button type="button" class="btn btn-sm btn-outline-danger" onclick="showRejectModal(@transfer.Id)">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    <!-- Tableau des transferts -->
    <div class="card">
        <div class="card-header">
            <h5 class="card-title mb-0">
                <i class="fas fa-list"></i>
                Liste des Transferts
                <span class="badge bg-secondary ms-2">@Model.Pagination.TotalCount</span>
            </h5>
        </div>
        <div class="card-body p-0">
            @if (Model.Transfers.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover mb-0">
                        <thead class="table-dark">
                            <tr>
                                <th>ID</th>
                                <th>Produit</th>
                                <th>Quantité</th>
                                <th>Source</th>
                                <th>Destination</th>
                                <th>Date demande</th>
                                <th>Statut</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var transfer in Model.Transfers)
                            {
                                <tr>
                                    <td>@transfer.Id</td>
                                    <td>
                                        <strong>@transfer.ProductName</strong>
                                        <div class="small text-muted">@transfer.ProductCategory</div>
                                    </td>
                                    <td>@transfer.QuantityText</td>
                                    <td>@transfer.FromHospitalCenterName</td>
                                    <td>@transfer.ToHospitalCenterName</td>
                                    <td>@transfer.RequestDate.ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>
                                        <span class="badge @transfer.StatusBadgeClass">@transfer.StatusText</span>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@transfer.Id" 
                                                class="btn btn-sm btn-outline-primary" title="Détails">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            @if (isSuperAdmin)
                                            {
                                                @if (transfer.CanBeCompleted)
                                                {
                                                    <button type="button" class="btn btn-sm btn-outline-success" 
                                                            onclick="showCompleteModal(@transfer.Id)" title="Compléter">
                                                        <i class="fas fa-check-double"></i>
                                                    </button>
                                                }
                                                @if (transfer.CanBeCancelled)
                                                {
                                                    <button type="button" class="btn btn-sm btn-outline-secondary" 
                                                            onclick="showCancelModal(@transfer.Id)" title="Annuler">
                                                        <i class="fas fa-ban"></i>
                                                    </button>
                                                }
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                @if (Model.Pagination.TotalPages > 1)
                {
                    <div class="card-footer">
                        <nav aria-label="Navigation des transferts">
                            <ul class="pagination justify-content-center mb-0">
                                <li class="page-item @(!Model.Pagination.HasPreviousPage ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { 
                                        pageIndex = Model.Pagination.PreviousPage, 
                                        Model.Filters.Status, 
                                        Model.Filters.FromCenterId,
                                        Model.Filters.ToCenterId, 
                                        Model.Filters.Days,
                                        Model.Filters.OnlyMyRequests
                                    })">
                                        <i class="fas fa-chevron-left"></i>
                                        Précédent
                                    </a>
                                </li>
                                
                                @for (int i = Math.Max(1, Model.Pagination.CurrentPage - 2); 
                                      i <= Math.Min(Model.Pagination.TotalPages, Model.Pagination.CurrentPage + 2); 
                                      i++)
                                {
                                    <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("Index", new { 
                                            pageIndex = i, 
                                            Model.Filters.Status, 
                                            Model.Filters.FromCenterId,
                                            Model.Filters.ToCenterId, 
                                            Model.Filters.Days,
                                            Model.Filters.OnlyMyRequests
                                        })">
                                            @i
                                        </a>
                                    </li>
                                }
                                
                                <li class="page-item @(!Model.Pagination.HasNextPage ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { 
                                        pageIndex = Model.Pagination.NextPage, 
                                        Model.Filters.Status, 
                                        Model.Filters.FromCenterId,
                                        Model.Filters.ToCenterId, 
                                        Model.Filters.Days,
                                        Model.Filters.OnlyMyRequests
                                    })">
                                        Suivant
                                        <i class="fas fa-chevron-right"></i>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                }
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-exchange-alt fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">Aucun transfert trouvé</h5>
                    <p class="text-muted mb-4">
                        @if (Model.Filters.Status != null || Model.Filters.FromCenterId != null || Model.Filters.ToCenterId != null || Model.Filters.OnlyMyRequests)
                        {
                            <text>Aucun transfert ne correspond aux critères sélectionnés.</text>
                        }
                        else
                        {
                            <text>Commencez par créer votre première demande de transfert.</text>
                        }
                    </p>
                    @if (isSuperAdmin)
                    {
                        <a asp-action="Request" class="btn btn-primary">
                            <i class="fas fa-plus"></i>
                            Créer une demande de transfert
                        </a>
                    }
                </div>
            }
        </div>
    </div>
</div>

<!-- Modals pour les actions -->
@if (isSuperAdmin)
{
    <!-- Modal d'approbation -->
    <div class="modal fade" id="approvalModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title">
                        <i class="fas fa-check-circle"></i>
                        Approuver le transfert
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-action="Approve" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="approvalTransferId" />
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="comments" class="form-label">Commentaires</label>
                            <textarea class="form-control" name="comments" id="approvalComments" rows="3" 
                                      required placeholder="Commentaires d'approbation..."></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                        <button type="submit" class="btn btn-success">Approuver</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal de rejet -->
    <div class="modal fade" id="rejectModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">
                        <i class="fas fa-times-circle"></i>
                        Rejeter le transfert
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-action="Reject" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="rejectTransferId" />
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="reason" class="form-label">Motif du rejet</label>
                            <textarea class="form-control" name="reason" id="rejectReason" rows="3" 
                                      required placeholder="Motif du rejet..."></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                        <button type="submit" class="btn btn-danger">Rejeter</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal de complétion -->
    <div class="modal fade" id="completeModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title">
                        <i class="fas fa-check-double"></i>
                        Compléter le transfert
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-action="Complete" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="completeTransferId" />
                    <div class="modal-body">
                        <p>Cette action va exécuter le transfert physique des produits entre les centres.</p>
                        <p>Le stock sera décrémenté du centre source et incrémenté dans le centre destination.</p>
                        <p class="font-weight-bold">Cette action est définitive. Êtes-vous sûr de vouloir continuer ?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                        <button type="submit" class="btn btn-success">Compléter le transfert</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal d'annulation -->
    <div class="modal fade" id="cancelModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-secondary text-white">
                    <h5 class="modal-title">
                        <i class="fas fa-ban"></i>
                        Annuler le transfert
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-action="Cancel" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="cancelTransferId" />
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="reason" class="form-label">Motif de l'annulation</label>
                            <textarea class="form-control" name="reason" id="cancelReason" rows="3" 
                                      required placeholder="Motif de l'annulation..."></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                        <button type="submit" class="btn btn-danger">Annuler le transfert</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Variables globales
        const isSuperAdmin = @Json.Serialize(isSuperAdmin);
        
        // Obtenir le token CSRF
        function getAntiForgeryToken() {
            return document.querySelector('input[name="__RequestVerificationToken"]').value;
        }

        // Auto-soumission du formulaire de filtres
        document.querySelectorAll('#filtersForm select').forEach(select => {
            select.addEventListener('change', () => {
                document.getElementById('filtersForm').submit();
            });
        });
        
        document.querySelector('#onlyMyRequests').addEventListener('change', () => {
            document.getElementById('filtersForm').submit();
        });

        // Effacer les filtres
        function clearFilters() {
            window.location.href = '@Url.Action("Index")';
        }

        // Actualiser les données
        function refreshData() {
            location.reload();
        }

        // Fonctions modales
        function showApprovalModal(transferId) {
            document.getElementById('approvalTransferId').value = transferId;
            document.getElementById('approvalComments').value = '';
            const approvalModal = new bootstrap.Modal(document.getElementById('approvalModal'));
            approvalModal.show();
        }

        function showRejectModal(transferId) {
            document.getElementById('rejectTransferId').value = transferId;
            document.getElementById('rejectReason').value = '';
            const rejectModal = new bootstrap.Modal(document.getElementById('rejectModal'));
            rejectModal.show();
        }

        function showCompleteModal(transferId) {
            document.getElementById('completeTransferId').value = transferId;
            const completeModal = new bootstrap.Modal(document.getElementById('completeModal'));
            completeModal.show();
        }

        function showCancelModal(transferId) {
            document.getElementById('cancelTransferId').value = transferId;
            document.getElementById('cancelReason').value = '';
            const cancelModal = new bootstrap.Modal(document.getElementById('cancelModal'));
            cancelModal.show();
        }

        // Fonction toast
        function showToast(message, type) {
            const existingToasts = document.querySelectorAll('.toast-notification');
            existingToasts.forEach(toast => toast.remove());
            
            const alertClass = type === 'success' ? 'alert-success' : 
                             type === 'warning' ? 'alert-warning' :
                             type === 'info' ? 'alert-info' : 'alert-danger';
            const icon = type === 'success' ? 'fa-check-circle' : 
                        type === 'warning' ? 'fa-exclamation-triangle' :
                        type === 'info' ? 'fa-info-circle' : 'fa-exclamation-circle';
            
            const toast = document.createElement('div');
            toast.className = `alert ${alertClass} alert-dismissible fade show position-fixed toast-notification`;
            toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; max-width: 350px;';
            toast.innerHTML = `
                <i class="fas ${icon}"></i> ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(() => {
                if (toast.parentNode) {
                    toast.remove();
                }
            }, 5000);
        }
    </script>
}

@section Styles {
    <style>
        .opacity-75 { opacity: 0.75; }
        .text-white-50 { color: rgba(255, 255, 255, 0.75); }
        .text-white-75 { color: rgba(255, 255, 255, 0.75); }
        .text-dark-50 { color: rgba(0, 0, 0, 0.5); }
        .text-dark-75 { color: rgba(0, 0, 0, 0.75); }
        
        .table-hover tbody tr:hover {
            background-color: rgba(0,123,255,0.1);
        }
        
        .btn-group .btn {
            border-radius: 0.25rem !important;
            margin-right: 2px;
        }
        
        .btn-group .btn:last-child {
            margin-right: 0;
        }
        
        .toast-notification {
            animation: slideInRight 0.3s ease-out;
        }
        
        @@keyframes slideInRight {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        
        .card.border-warning {
            border-color: #ffc107 !important;
        }
        
        .card.border-danger {
            border-color: #dc3545 !important;
        }
    </style>
}