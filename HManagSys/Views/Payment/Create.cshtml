@using HManagSys.Models.ViewModels.Payments
@model CreatePaymentViewModel
@{
    ViewData["Title"] = "Nouveau paiement";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="Index">Paiements</a></li>
            <li class="breadcrumb-item active">Nouveau paiement</li>
        </ol>
    </nav>
    <div>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Retour
        </a>
    </div>
</div>

<div class="card shadow-sm">
    <div class="card-header bg-primary text-white">
        <h5 class="card-title mb-0">
            <i class="fas fa-money-bill-wave"></i> Enregistrer un paiement - @Model.ReferenceDescription
        </h5>
    </div>
    <div class="card-body">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
            <input type="hidden" asp-for="ReferenceType" />
            <input type="hidden" asp-for="ReferenceId" />
            <input type="hidden" asp-for="ReferenceDescription" />
            <input type="hidden" asp-for="PatientId" />
            <input type="hidden" asp-for="HospitalCenterId" />

            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="card border-light mb-3">
                        <div class="card-header bg-light">Informations de référence</div>
                        <div class="card-body">
                            <div class="mb-3">
                                <label class="form-label text-muted">Type de référence</label>
                                <div class="fw-bold">
                                    @(Model.ReferenceType == "CareEpisode" ? "Épisode de soins" :
                                                                        Model.ReferenceType == "Examination" ? "Examen" : Model.ReferenceType)
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label text-muted">Référence</label>
                                <div class="fw-bold">@Model.ReferenceDescription (#@Model.ReferenceId)</div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label text-muted">Patient</label>
                                <div class="fw-bold">@Model.PatientName</div>
                            </div>
                            @if (Model.TotalAmount.HasValue)
                            {
                                <div class="mb-3">
                                    <label class="form-label text-muted">Montant total</label>
                                    <div class="fw-bold">@Model.TotalAmount.Value.ToString("N0") FCFA</div>
                                </div>
                            }
                            @if (Model.RemainingAmount.HasValue)
                            {
                                <div class="mb-3">
                                    <label class="form-label text-muted">Reste à payer</label>
                                    <div class="fw-bold @(Model.RemainingAmount.Value > 0 ? "text-danger" : "text-success")">
                                        @Model.RemainingAmount.Value.ToString("N0") FCFA
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="card border-light mb-3">
                        <div class="card-header bg-light">Détails du paiement</div>
                        <div class="card-body">
                            <div class="form-group mb-3">
                                <label asp-for="PaymentMethodId" class="form-label">Méthode de paiement</label>
                                <select asp-for="PaymentMethodId" class="form-select" required>
                                    <option value="">-- Sélectionner --</option>
                                    @foreach (var method in Model.PaymentMethods.Where(m => m.IsActive))
                                    {
                                        <option value="@method.Id">@method.Name</option>
                                    }
                                </select>
                                <span asp-validation-for="PaymentMethodId" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="Amount" class="form-label">Montant</label>
                                <div class="input-group">
                                    <input asp-for="Amount" class="form-control" type="number" min="1" required />
                                    <span class="input-group-text">FCFA</span>
                                </div>
                                <span asp-validation-for="Amount" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="PaymentDate" class="form-label">Date de paiement</label>
                                <input asp-for="PaymentDate" class="form-control" type="datetime-local" required />
                                <span asp-validation-for="PaymentDate" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="ReceivedById" class="form-label">Reçu par</label>
                                <input type="text" class="form-control" value="@ViewBag.CurrentUserName" readonly />
                                <input asp-for="ReceivedById" type="hidden" />
                                <span asp-validation-for="ReceivedById" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="TransactionReference" class="form-label">Référence de transaction</label>
                                <input asp-for="TransactionReference" class="form-control" />
                                <span asp-validation-for="TransactionReference" class="text-danger"></span>
                                <small class="text-muted">Référence Orange/MTN Money, numéro de chèque, etc.</small>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="Notes" class="form-label">Notes</label>
                                <textarea asp-for="Notes" class="form-control" rows="2"></textarea>
                                <span asp-validation-for="Notes" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="d-flex justify-content-end">
                <div class="btn-group">
                    <a asp-action="Index" class="btn btn-secondary">Annuler</a>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Enregistrer le paiement
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function() {
            // Masquer/afficher les champs spécifiques à certaines méthodes de paiement
            $('#PaymentMethodId').change(function() {
                const methodId = $(this).val();
                if (methodId) {
                    // Selon la méthode, on pourrait afficher ou masquer certains champs
                    // Par exemple, pour Orange Money on peut exiger une référence
                }
            });

            // Initialiser la date et l'heure du paiement
            const localDatetime = new Date().toISOString().slice(0, 16);
            $('#PaymentDate').val(localDatetime);
        });
    </script>
}