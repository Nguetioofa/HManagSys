@using HManagSys.Models.ViewModels.Patients
@model EditPrescriptionViewModel
@{
    ViewData["Title"] = "Modifier Prescription";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="Index">Prescriptions</a></li>
            <li class="breadcrumb-item"><a asp-action="Details" asp-route-id="@Model.Id">Détails</a></li>
            <li class="breadcrumb-item active">Modifier</li>
        </ol>
    </nav>
    <div>
        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Retour
        </a>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h5 class="card-title mb-0">
                    <i class="fas fa-prescription-bottle-alt"></i> Modifier la prescription #@Model.Id pour @Model.PatientName
                </h5>
            </div>
            <div class="card-body">
                <form asp-action="Edit" method="post" id="prescriptionForm">
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                    <input type="hidden" asp-for="Id" />
                    <input type="hidden" asp-for="PatientId" />
                    <input type="hidden" asp-for="PatientName" />
                    <input type="hidden" asp-for="HospitalCenterId" />
                    <input type="hidden" asp-for="Status" />
                    <input type="hidden" asp-for="PrescriptionDate" />

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="DiagnosisId" class="form-label"></label>
                                <select asp-for="DiagnosisId" class="form-select">
                                    <option value="">-- Sélectionner un diagnostic --</option>
                                    @foreach (var option in Model.DiagnosisOptions)
                                    {
                                        <option value="@option.Value">@option.Text</option>
                                    }
                                </select>
                                <span asp-validation-for="DiagnosisId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="CareEpisodeId" class="form-label"></label>
                                <select asp-for="CareEpisodeId" class="form-select">
                                    <option value="">-- Sélectionner un épisode --</option>
                                    @foreach (var option in Model.CareEpisodeOptions)
                                    {
                                        <option value="@option.Value">@option.Text</option>
                                    }
                                </select>
                                <span asp-validation-for="CareEpisodeId" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group mb-4">
                        <label asp-for="Instructions" class="form-label"></label>
                        <textarea asp-for="Instructions" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="Instructions" class="text-danger"></span>
                    </div>

                    <h5 class="card-title mb-3"><i class="fas fa-pills"></i> Produits prescrits</h5>

                    <div id="prescription-items-container">
                        @for (int i = 0; i < Model.Items.Count; i++)
                        {
                            <div class="prescription-item card mb-3">
                                <div class="card-body">
                                    <input type="hidden" name="Items[@i].Id" value="@Model.Items[i].Id" />
                                    <input type="hidden" name="Items[@i].PrescriptionId" value="@Model.Items[i].PrescriptionId" />
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <h6 class="card-subtitle text-muted">Produit #@(i + 1)</h6>
                                        <button type="button" class="btn-close remove-item" data-item-id="@Model.Items[i].Id" aria-label="Supprimer"></button>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-md-8">
                                            <label class="form-label">Produit</label>
                                            <input type="hidden" name="Items[@i].ProductId" value="@Model.Items[i].ProductId" />
                                            <input type="text" class="form-control" value="@Model.Items[i].ProductName" readonly />
                                        </div>
                                        <div class="col-md-4">
                                            <label class="form-label">Quantité</label>
                                            <input type="number" step="0.01" min="0.01" class="form-control" name="Items[@i].Quantity" value="@Model.Items[i].Quantity" />
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-md-6">
                                            <label class="form-label">Dosage</label>
                                            <input type="text" class="form-control" name="Items[@i].Dosage" value="@Model.Items[i].Dosage" placeholder="Ex: 1 comprimé" />
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Fréquence</label>
                                            <input type="text" class="form-control" name="Items[@i].Frequency" value="@Model.Items[i].Frequency" placeholder="Ex: 3 fois par jour" />
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="form-label">Durée</label>
                                            <input type="text" class="form-control" name="Items[@i].Duration" value="@Model.Items[i].Duration" placeholder="Ex: 5 jours" />
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Instructions spécifiques</label>
                                            <input type="text" class="form-control" name="Items[@i].Instructions" value="@Model.Items[i].Instructions" placeholder="Ex: Prendre après le repas" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <div class="card mb-4">
                        <div class="card-header bg-light">
                            <h6 class="card-title mb-0">Ajouter un nouveau produit</h6>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Produit</label>
                                        <select id="new-product-id" class="form-select">
                                            <option value="">-- Sélectionner un produit --</option>
                                            @foreach (var product in Model.AvailableProducts)
                                            {
                                                <option value="@product.Id" data-name="@product.Name" data-unit="@product.UnitOfMeasure">@product.DisplayName</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="form-label">Quantité</label>
                                        <input type="number" id="new-product-quantity" class="form-control" value="1" min="0.01" step="0.01" />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="form-label">&nbsp;</label>
                                        <button type="button" id="add-product-btn" class="btn btn-primary form-control">
                                            <i class="fas fa-plus-circle"></i> Ajouter
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-end gap-2">
                        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">Annuler</a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Enregistrer les modifications
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function() {
            // Supprimer un item existant
            $(".remove-item").click(function() {
                const itemId = $(this).data("item-id");
                const itemElement = $(this).closest(".prescription-item");

                if (confirm("Êtes-vous sûr de vouloir supprimer ce produit de la prescription?")) {
                    // Si l'item a un ID (existe en base de données)
                    if (itemId) {
                        $.ajax({
                            url: '@Url.Action("RemoveItem", "Prescription")',
                            type: 'POST',
                            data: {
                                id: itemId,
                                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                            },
                            success: function(response) {
                                if (response.success) {
                                    itemElement.remove();
                                    reindexItems();
                                    toastr.success(response.message);
                                } else {
                                    toastr.error(response.message);
                                }
                            },
                            error: function() {
                                toastr.error("Une erreur est survenue lors de la suppression du produit.");
                            }
                        });
                    } else {
                        // Sinon, juste supprimer du DOM
                        itemElement.remove();
                        reindexItems();
                    }
                }
            });

            // Ajouter un nouveau produit
            $("#add-product-btn").click(function() {
                const productId = $("#new-product-id").val();
                const productName = $("#new-product-id option:selected").text();
                const quantity = $("#new-product-quantity").val();

                if (!productId) {
                    alert("Veuillez sélectionner un produit.");
                    return;
                }

                if (!quantity || parseFloat(quantity) <= 0) {
                    alert("Veuillez entrer une quantité valide.");
                    return;
                }

                const newItem = {
                    productId: productId,
                    productName: productName,
                    quantity: quantity
                };

                // Appel AJAX pour ajouter le produit à la prescription
                $.ajax({
                    url: '@Url.Action("AddItem", "Prescription")',
                    type: 'POST',
                    data: {
                        PrescriptionId: @Model.Id,
                        ProductId: newItem.productId,
                        Quantity: newItem.quantity,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            // Ajouter le produit à la liste
                            addItemToDOM(response.item);

                            // Réinitialiser le formulaire
                            $("#new-product-id").val("");
                            $("#new-product-quantity").val("1");

                            toastr.success(response.message);
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function() {
                        toastr.error("Une erreur est survenue lors de l'ajout du produit.");
                    }
                });
            });

            // Fonction pour ajouter un item au DOM
            function addItemToDOM(item) {
                const container = $("#prescription-items-container");
                const itemCount = $(".prescription-item").length;

                const itemHtml = `
                <div class="prescription-item card mb-3">
                    <div class="card-body">
                        <input type="hidden" name="Items[${itemCount}].Id" value="${item.id}" />
                        <input type="hidden" name="Items[${itemCount}].PrescriptionId" value="${item.prescriptionId}" />
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <h6 class="card-subtitle text-muted">Produit #${itemCount + 1}</h6>
                            <button type="button" class="btn-close remove-item" data-item-id="${item.id}" aria-label="Supprimer"></button>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-8">
                                <label class="form-label">Produit</label>
                                <input type="hidden" name="Items[${itemCount}].ProductId" value="${item.productId}" />
                                <input type="text" class="form-control" value="${item.productName}" readonly />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Quantité</label>
                                <input type="number" step="0.01" min="0.01" class="form-control" name="Items[${itemCount}].Quantity" value="${item.quantity}" />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">Dosage</label>
                                <input type="text" class="form-control" name="Items[${itemCount}].Dosage" value="${item.dosage || ''}" placeholder="Ex: 1 comprimé" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Fréquence</label>
                                <input type="text" class="form-control" name="Items[${itemCount}].Frequency" value="${item.frequency || ''}" placeholder="Ex: 3 fois par jour" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="form-label">Durée</label>
                                <input type="text" class="form-control" name="Items[${itemCount}].Duration" value="${item.duration || ''}" placeholder="Ex: 5 jours" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Instructions spécifiques</label>
                                <input type="text" class="form-control" name="Items[${itemCount}].Instructions" value="${item.instructions || ''}" placeholder="Ex: Prendre après le repas" />
                            </div>
                        </div>
                    </div>
                </div>`;

                container.append(itemHtml);

                // Ajouter l'event handler pour le nouveau bouton de suppression
                container.find(".prescription-item:last-child .remove-item").click(function() {
                    const itemId = $(this).data("item-id");
                    const itemElement = $(this).closest(".prescription-item");

                    if (confirm("Êtes-vous sûr de vouloir supprimer ce produit de la prescription?")) {
                        if (itemId) {
                            $.ajax({
                                url: '@Url.Action("RemoveItem", "Prescription")',
                                type: 'POST',
                                data: {
                                    id: itemId,
                                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                                },
                                success: function(response) {
                                    if (response.success) {
                                        itemElement.remove();
                                        reindexItems();
                                        toastr.success(response.message);
                                    } else {
                                        toastr.error(response.message);
                                    }
                                },
                                error: function() {
                                    toastr.error("Une erreur est survenue lors de la suppression du produit.");
                                }
                            });
                        } else {
                            itemElement.remove();
                            reindexItems();
                        }
                    }
                });
            }

            // Fonction pour réindexer les items après suppression
            function reindexItems() {
                $(".prescription-item").each(function(index) {
                    $(this).find("input, select").each(function() {
                        const name = $(this).attr("name");
                        if (name) {
                            const newName = name.replace(/Items\[\d+\]/, `Items[${index}]`);
                            $(this).attr("name", newName);
                        }
                    });

                    // Mettre à jour le numéro du produit
                    $(this).find(".card-subtitle").text(`Produit #${index + 1}`);
                });
            }

            // Validation du formulaire
            $("#prescriptionForm").submit(function(e) {
                // Vérifier qu'au moins un produit est présent
                if ($(".prescription-item").length === 0) {
                    e.preventDefault();
                    alert("La prescription doit contenir au moins un produit.");
                    return false;
                }

                return true;
            });
        });
    </script>
}