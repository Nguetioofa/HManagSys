@using HManagSys.Models.ViewModels.Reports
@model SalesReportViewModel
@{
    ViewData["Title"] = "Rapport des Ventes";
}

<div class="container-fluid">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800"><i class="fas fa-shopping-cart"></i> Rapport des Ventes</h1>
        <div>
            <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#exportModal">
                <i class="fas fa-file-export"></i> Exporter
            </button>
            <a href="@Url.Action("Index", "Report")" class="btn btn-sm btn-secondary">
                <i class="fas fa-arrow-left"></i> Retour
            </a>
        </div>
    </div>

    <!-- Filtres -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filtres</h6>
        </div>
        <div class="card-body">
            <form id="filterForm" method="get" action="@Url.Action("SalesReport", "Report")">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group mb-2">
                            <label for="HospitalCenterId">Centre</label>
                            <select class="form-select" id="HospitalCenterId" name="HospitalCenterId">
                                @foreach (var item in ViewBag.Centers)
                                {
                                    <option value="@item.Value" @* @(Model.Filters != null && ((SalesReportFilters)Model.Filters).HospitalCenterId.ToString() == item.Value ? "selected" : "") *@>@item.Text</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group mb-2">
                            <label for="PaymentStatus">Statut de paiement</label>
                            <select class="form-select" id="PaymentStatus" name="PaymentStatus">
                                @foreach (var item in ViewBag.PaymentStatuses)
                                {
                                    <option value="@item.Value" @* @(Model.Filters != null && ((SalesReportFilters)Model.Filters).PaymentStatus == item.Value ? "selected" : "") *@>@item.Text</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group mb-2">
                            <label for="SoldBy">Vendu par</label>
                            <select class="form-select" id="SoldBy" name="SoldBy">
                                @foreach (var item in ViewBag.Sellers)
                                {
                                    <option value="@item.Value" @* @(Model.Filters != null && ((SalesReportFilters)Model.Filters).SoldBy.ToString() == item.Value ? "selected" : "") *@>@item.Text</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group mb-2">
                            <label for="ProductId">Produit</label>
                            <select class="form-select" id="ProductId" name="ProductId">
                                <option value="">Tous les produits</option>
                                <!-- Options de produits ici -->
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-md-3">
                        <div class="form-group mb-2">
                            <label for="FromDate">Date de début</label>
                            <input type="date" class="form-control" id="FromDate" name="FromDate" 
                                   value="@(Model.Filters != null ? ((SalesReportFilters)Model.Filters).FromDate?.ToString("yyyy-MM-dd") : DateTime.Now.AddMonths(-1).ToString("yyyy-MM-dd"))">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group mb-2">
                            <label for="ToDate">Date de fin</label>
                            <input type="date" class="form-control" id="ToDate" name="ToDate" 
                                   value="@(Model.Filters != null ? ((SalesReportFilters)Model.Filters).ToDate?.ToString("yyyy-MM-dd") : DateTime.Now.ToString("yyyy-MM-dd"))">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-2">
                            <label for="PatientId">Patient (optionnel)</label>
                            <select class="form-select" id="PatientId" name="PatientId">
                                <option value="">Tous les patients</option>
                                <!-- Options des patients ici -->
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-md-12 text-end">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-filter"></i> Filtrer
                        </button>
                        <a href="@Url.Action("SalesReport", "Report")" class="btn btn-outline-secondary">
                            <i class="fas fa-sync"></i> Réinitialiser
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Statistiques Rapides -->
    <div class="row">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Total Ventes
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.FormattedTotalFinalAmount</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Remises
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.FormattedTotalDiscountAmount</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-tags fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                Produits Vendus
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TotalProductsSold</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-boxes fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Ventes par Statut
                            </div>
                            <div class="mb-0">
                                <div class="progress progress-sm mr-2 mb-1">
                                    @{
                                        decimal paidPercent = 0;
                                        decimal partialPercent = 0;
                                        decimal pendingPercent = 0;
                                        
                                        if (Model.SalesByPaymentStatus.ContainsKey("Paid"))
                                            paidPercent = Model.SalesByPaymentStatus["Paid"] / Model.TotalFinalAmount * 100;
                                        
                                        if (Model.SalesByPaymentStatus.ContainsKey("Partial"))
                                            partialPercent = Model.SalesByPaymentStatus["Partial"] / Model.TotalFinalAmount * 100;
                                            
                                        if (Model.SalesByPaymentStatus.ContainsKey("Pending"))
                                            pendingPercent = Model.SalesByPaymentStatus["Pending"] / Model.TotalFinalAmount * 100;
                                    }
                                    <div class="progress-bar bg-success" role="progressbar" style="width: @paidPercent%" aria-valuenow="@paidPercent" aria-valuemin="0" aria-valuemax="100"></div>
                                    <div class="progress-bar bg-warning" role="progressbar" style="width: @partialPercent%" aria-valuenow="@partialPercent" aria-valuemin="0" aria-valuemax="100"></div>
                                    <div class="progress-bar bg-danger" role="progressbar" style="width: @pendingPercent%" aria-valuenow="@pendingPercent" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                                <small>
                                    <span class="badge bg-success">Payé: @(paidPercent.ToString("0"))%</span>
                                    <span class="badge bg-warning text-dark">Partiel: @(partialPercent.ToString("0"))%</span>
                                    <span class="badge bg-danger">En attente: @(pendingPercent.ToString("0"))%</span>
                                </small>
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-chart-pie fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Graphiques -->
    <div class="row">
        <div class="col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Produits les Plus Vendus</h6>
                </div>
                <div class="card-body">
                    <div class="chart-bar">
                        <canvas id="topProductsChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Ventes par Jour</h6>
                </div>
                <div class="card-body">
                    <div class="chart-area">
                        <canvas id="dailySalesChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tableau de données -->
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Détails des Ventes</h6>
            <div>
                <span class="badge bg-success">Total: @Model.FormattedTotalFinalAmount</span>
                <span class="badge bg-secondary">@Model.TotalCount ventes</span>
                @if (Model.TotalCount > 0)
                {
                    <span class="badge bg-info">Généré le: @Model.FormattedGeneratedAt</span>
                }
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="salesTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>N° Vente</th>
                            <th>Patient</th>
                            <th>Centre</th>
                            <th>Vendu par</th>
                            <th>Date</th>
                            <th>Montant Total</th>
                            <th>Remise</th>
                            <th>Montant Final</th>
                            <th>Statut</th>
                            <th>Articles</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td>@item.SaleNumber</td>
                                <td>@item.PatientName</td>
                                <td>@item.HospitalCenterName</td>
                                <td>@item.SoldByName</td>
                                <td>@item.FormattedSaleDate</td>
                                <td class="text-end">@item.FormattedTotalAmount</td>
                                <td class="text-end">@item.FormattedDiscountAmount</td>
                                <td class="text-end fw-bold">@item.FormattedFinalAmount</td>
                                <td>
                                    <span class="@item.PaymentStatusBadge">@item.PaymentStatus</span>
                                </td>
                                <td class="text-center">
                                    <button class="btn btn-sm btn-outline-info show-items" data-bs-toggle="modal" data-bs-target="#itemsModal" data-sale-id="@item.SaleId" data-sale-number="@item.SaleNumber">
                                        @item.ItemCount articles
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal d'export -->
<div class="modal fade" id="exportModal" tabindex="-1" aria-labelledby="exportModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exportModalLabel">Exporter le Rapport</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="exportForm">
                    <div class="form-group mb-3">
                        <label for="exportFormat">Format</label>
                        <select class="form-select" id="exportFormat" name="format">
                            <option value="Excel">Excel (.xlsx)</option>
                            <option value="PDF">PDF (.pdf)</option>
                        </select>
                    </div>
                    <div class="form-group mb-3">
                        <label for="exportTitle">Titre (optionnel)</label>
                        <input type="text" class="form-control" id="exportTitle" name="title" placeholder="Titre du rapport">
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="includeCharts" name="includeCharts" checked>
                        <label class="form-check-label" for="includeCharts">
                            Inclure les graphiques
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-primary" id="exportExcel">
                    <i class="fas fa-file-excel"></i> Exporter en Excel
                </button>
                <button type="button" class="btn btn-danger" id="exportPdf">
                    <i class="fas fa-file-pdf"></i> Exporter en PDF
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal détails des articles -->
<div class="modal fade" id="itemsModal" tabindex="-1" aria-labelledby="itemsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="itemsModalLabel">Détails de la Vente</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="itemsLoader" class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                    <p>Chargement des détails...</p>
                </div>
                <div id="itemsContent" class="d-none">
                    <h5 id="saleTitle" class="mb-3"></h5>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Produit</th>
                                <th class="text-end">Quantité</th>
                                <th class="text-end">Prix Unitaire</th>
                                <th class="text-end">Total</th>
                            </tr>
                        </thead>
                        <tbody id="itemsTableBody">
                            <!-- Contenu dynamique -->
                        </tbody>
                        <tfoot>
                            <tr class="table-secondary">
                                <th colspan="3" class="text-end">Total:</th>
                                <th class="text-end" id="itemsTotal"></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Charger les graphiques
        document.addEventListener('DOMContentLoaded', function () {
            // Produits les plus vendus
            var productLabels = [];
            var productQuantities = [];
            var productRevenues = [];
            
            @foreach (var category in Model.TopSellingProducts)
            {
                foreach (var product in category.Value.Take(5))
                {
                    <text>
                    productLabels.push('@product.ProductName');
                    productQuantities.push(@product.QuantitySold);
                    productRevenues.push(@product.Revenue);
                    </text>
                }
            }
            
            var productsCtx = document.getElementById('topProductsChart').getContext('2d');
            var productsChart = new Chart(productsCtx, {
                type: 'bar',
                data: {
                    labels: productLabels,
                    datasets: [
                        {
                            label: 'Quantité vendue',
                            yAxisID: 'y',
                            data: productQuantities,
                            backgroundColor: 'rgba(78, 115, 223, 0.8)',
                            borderColor: 'rgba(78, 115, 223, 1)',
                            borderWidth: 1
                        },
                        {
                            label: 'Revenus (FCFA)',
                            yAxisID: 'y1',
                            data: productRevenues,
                            type: 'line',
                            backgroundColor: 'rgba(28, 200, 138, 0.05)',
                            borderColor: 'rgba(28, 200, 138, 1)',
                            borderWidth: 2,
                            pointBackgroundColor: 'rgba(28, 200, 138, 1)',
                            pointBorderColor: 'rgba(28, 200, 138, 1)',
                            pointRadius: 4
                        }
                    ]
                },
                options: {
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            type: 'linear',
                            position: 'left',
                            title: {
                                display: true,
                                text: 'Quantité'
                            }
                        },
                        y1: {
                            type: 'linear',
                            position: 'right',
                            title: {
                                display: true,
                                text: 'Revenus (FCFA)'
                            },
                            grid: {
                                drawOnChartArea: false
                            },
                            ticks: {
                                callback: function(value) {
                                    return value.toLocaleString() + ' FCFA';
                                }
                            }
                        }
                    }
                }
            });

            // Ventes par jour
            var dailyLabels = [];
            var dailyAmounts = [];
            
            @for (int i = 0; i < 14 && i < Model.Items.Count; i++)
            {
                var salesPerDay = Model.Items
                    .Where(s => s.SaleDate.Date == DateTime.Now.AddDays(-i).Date)
                    .Sum(s => s.FinalAmount);
                
                <text>
                dailyLabels.push('@DateTime.Now.AddDays(-i).ToString("dd/MM")');
                dailyAmounts.push(@salesPerDay);
                </text>
            }
            
            dailyLabels.reverse();
            dailyAmounts.reverse();
            
            var dailyCtx = document.getElementById('dailySalesChart').getContext('2d');
            var dailyChart = new Chart(dailyCtx, {
                type: 'line',
                data: {
                    labels: dailyLabels,
                    datasets: [{
                        label: 'Ventes (FCFA)',
                        data: dailyAmounts,
                        backgroundColor: 'rgba(231, 74, 59, 0.05)',
                        borderColor: 'rgba(231, 74, 59, 1)',
                        pointRadius: 3,
                        pointBackgroundColor: 'rgba(231, 74, 59, 1)',
                        pointBorderColor: 'rgba(231, 74, 59, 1)',
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: 'rgba(231, 74, 59, 1)',
                        pointHoverBorderColor: 'rgba(231, 74, 59, 1)',
                        pointHitRadius: 10,
                        pointBorderWidth: 2,
                        tension: 0.3
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return value.toLocaleString() + ' FCFA';
                                }
                            }
                        }
                    }
                }
            });

            // Datatable
            $(document).ready(function() {
                $('#salesTable').DataTable({
                    language: {
                        url: 'https://cdn.datatables.net/plug-ins/1.10.25/i18n/French.json'
                    },
                    order: [[4, 'desc']] // Trier par date décroissante
                });
                
                // Afficher les détails des articles
                $('.show-items').click(function() {
                    var saleId = $(this).data('sale-id');
                    var saleNumber = $(this).data('sale-number');
                    
                    $('#saleTitle').text('Vente #' + saleNumber);
                    $('#itemsLoader').removeClass('d-none');
                    $('#itemsContent').addClass('d-none');
                    $('#itemsTableBody').empty();
                    
                    // Simulation de chargement des données
                    // Dans un cas réel, vous feriez un appel AJAX au backend
                    setTimeout(function() {
                        // Chercher les articles dans le modèle
                        @foreach (var sale in Model.Items)
                        {
                            <text>
                            if (@sale.SaleId === saleId) {
                                var items = @Html.Raw(Json.Serialize(sale.Items));
                                var totalAmount = 0;
                                
                                items.forEach(function(item) {
                                    $('#itemsTableBody').append(
                                        '<tr>' +
                                        '<td>' + item.productName + '</td>' +
                                        '<td class="text-end">' + item.formattedQuantity + '</td>' +
                                        '<td class="text-end">' + item.formattedUnitPrice + '</td>' +
                                        '<td class="text-end">' + item.formattedTotalPrice + '</td>' +
                                        '</tr>'
                                    );
                                    
                                    totalAmount += item.totalPrice;
                                });
                                
                                $('#itemsTotal').text(totalAmount.toLocaleString() + ' FCFA');
                            }
                            </text>
                        }
                        
                        $('#itemsLoader').addClass('d-none');
                        $('#itemsContent').removeClass('d-none');
                    }, 500);
                });
            });

            // Export buttons
            $('#exportExcel').on('click', function() {
                var filters = @Html.Raw(Json.Serialize(Model.Filters));
                var filtersJson = JSON.stringify(filters);
                window.location.href = '@Url.Action("ExportToExcel", "Report")?reportType=SalesReport&filters=' + encodeURIComponent(filtersJson);
            });
            
            $('#exportPdf').on('click', function() {
                var filters = @Html.Raw(Json.Serialize(Model.Filters));
                var filtersJson = JSON.stringify(filters);
                window.location.href = '@Url.Action("ExportToPdf", "Report")?reportType=SalesReport&filters=' + encodeURIComponent(filtersJson);
            });
        });
    </script>
}