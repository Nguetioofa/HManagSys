@model HManagSys.Models.ViewModels.Users.ChangePasswordViewModel
@{
    ViewData["Title"] = "Changement de mot de passe";
    Layout = "_Layout";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-key"></i>
                        @(Model.IsForced ? "Changement de mot de passe obligatoire" : "Modifier le mot de passe")
                    </h4>
                </div>
                <div class="card-body">
                    @if (Model.IsForced)
                    {
                        <div class="alert alert-warning" role="alert">
                            <strong>Attention :</strong> Votre mot de passe a été réinitialisé par un administrateur. 
                            Vous devez le modifier avant de continuer.
                        </div>
                    }

                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger">
                            <ul class="mb-0">
                                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                {
                                    <li>@error.ErrorMessage</li>
                                }
                            </ul>
                        </div>
                    }

                    <form asp-controller="Auth" asp-action="ChangePassword" method="post" id="changePasswordForm">
                        @Html.HiddenFor(m => m.UserId)
                        @Html.HiddenFor(m => m.Email)
                        @Html.HiddenFor(m => m.IsForced)

                        <div class="mb-3">
                            <label asp-for="Email" class="form-label">Email</label>
                            <input asp-for="Email" class="form-control" readonly />
                        </div>

                        @if (!Model.IsForced)
                        {
                            <div class="mb-3">
                                <label asp-for="CurrentPassword" class="form-label">Mot de passe actuel</label>
                                <div class="input-group">
                                    <input asp-for="CurrentPassword" class="form-control" type="password" />
                                    <button class="btn btn-outline-secondary" type="button" id="toggleCurrentPassword">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                                <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                            </div>
                        }

                        <div class="mb-3">
                            <label asp-for="NewPassword" class="form-label">Nouveau mot de passe</label>
                            <div class="input-group">
                                <input asp-for="NewPassword" class="form-control" type="password" id="newPassword" />
                                <button class="btn btn-outline-secondary" type="button" id="toggleNewPassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <span asp-validation-for="NewPassword" class="text-danger"></span>
                            
                            <!-- Indicateur de force du mot de passe -->
                            <div class="mt-2">
                                <div class="progress" style="height: 5px;">
                                    <div class="progress-bar" id="passwordStrength" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                                <small class="text-muted" id="passwordStrengthText">
                                    Le mot de passe doit contenir au moins 8 caractères, incluant majuscules, minuscules, chiffres et caractères spéciaux.
                                </small>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ConfirmPassword" class="form-label">Confirmer le nouveau mot de passe</label>
                            <div class="input-group">
                                <input asp-for="ConfirmPassword" class="form-control" type="password" />
                                <button class="btn btn-outline-secondary" type="button" id="toggleConfirmPassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="fas fa-check"></i>
                                Changer le mot de passe
                            </button>
                            @if (!Model.IsForced)
                            {
                                <a asp-controller="Auth" asp-action="Login" class="btn btn-outline-secondary">
                                    <i class="fas fa-arrow-left"></i>
                                    Retour à la connexion
                                </a>
                            }
                        </div>
                    </form>
                </div>
            </div>

            <!-- Conseils de sécurité -->
            <div class="card mt-3">
                <div class="card-body">
                    <h6 class="card-title"><i class="fas fa-shield-alt"></i> Conseils pour un mot de passe sécurisé</h6>
                    <ul class="small mb-0">
                        <li>Utilisez au moins 8 caractères</li>
                        <li>Mélangez majuscules et minuscules</li>
                        <li>Incluez des chiffres et des caractères spéciaux</li>
                        <li>Évitez les informations personnelles</li>
                        <li>N'utilisez pas de mots du dictionnaire</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Fonctionnalité de basculement de visibilité du mot de passe
        function togglePasswordVisibility(buttonId, inputId) {
            document.getElementById(buttonId).addEventListener('click', function() {
                const passwordInput = document.getElementById(inputId);
                const icon = this.querySelector('i');
                
                if (passwordInput.type === 'password') {
                    passwordInput.type = 'text';
                    icon.classList.remove('fa-eye');
                    icon.classList.add('fa-eye-slash');
                } else {
                    passwordInput.type = 'password';
                    icon.classList.remove('fa-eye-slash');
                    icon.classList.add('fa-eye');
                }
            });
        }

        // Initialiser les boutons de visibilité
        togglePasswordVisibility('toggleCurrentPassword', 'CurrentPassword');
        togglePasswordVisibility('toggleNewPassword', 'newPassword');
        togglePasswordVisibility('toggleConfirmPassword', 'ConfirmPassword');

        // Vérification de la force du mot de passe en temps réel
        document.getElementById('newPassword').addEventListener('input', function() {
            const password = this.value;
            const strength = checkPasswordStrength(password);
            
            const progressBar = document.getElementById('passwordStrength');
            const strengthText = document.getElementById('passwordStrengthText');
            
            progressBar.style.width = strength.score + '%';
            progressBar.setAttribute('aria-valuenow', strength.score);
            
            // Changer les couleurs selon la force
            progressBar.className = 'progress-bar';
            if (strength.score < 25) {
                progressBar.classList.add('bg-danger');
                strengthText.textContent = 'Très faible - ' + strength.feedback;
                strengthText.className = 'text-danger';
            } else if (strength.score < 50) {
                progressBar.classList.add('bg-warning');
                strengthText.textContent = 'Faible - ' + strength.feedback;
                strengthText.className = 'text-warning';
            } else if (strength.score < 75) {
                progressBar.classList.add('bg-info');
                strengthText.textContent = 'Moyen - ' + strength.feedback;
                strengthText.className = 'text-info';
            } else {
                progressBar.classList.add('bg-success');
                strengthText.textContent = 'Fort - Excellent choix !';
                strengthText.className = 'text-success';
            }
        });

        function checkPasswordStrength(password) {
            let score = 0;
            let feedback = [];

            if (password.length >= 8) {
                score += 25;
            } else {
                feedback.push('au moins 8 caractères');
            }

            if (/[A-Z]/.test(password)) {
                score += 15;
            } else {
                feedback.push('une majuscule');
            }

            if (/[a-z]/.test(password)) {
                score += 15;
            } else {
                feedback.push('une minuscule');
            }

            if (/\d/.test(password)) {
                score += 15;
            } else {
                feedback.push('un chiffre');
            }

            if (/[!@@#$%^&*(),.?":{}|<>]/.test(password)) {
                score += 20;
            } else {
                feedback.push('un caractère spécial');
            }

            if (password.length >= 12) score += 10;

            return {
                score: Math.min(100, score),
                feedback: feedback.length > 0 ? 'Ajoutez ' + feedback.join(', ') : 'Très bon mot de passe'
            };
        }

        // Validation côté client pour s'assurer que les mots de passe correspondent
        document.getElementById('changePasswordForm').addEventListener('submit', function(e) {
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('ConfirmPassword').value;
            
            if (newPassword !== confirmPassword) {
                e.preventDefault();
                alert('Les mots de passe ne correspondent pas. Veuillez vérifier.');
                return false;
            }
        });
    </script>
}