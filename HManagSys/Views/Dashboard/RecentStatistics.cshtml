@using HManagSys.Models.ViewModels.Dashboard
@model RecentMedicalStatisticsViewModel
@{
    ViewData["Title"] = "Statistiques médicales récentes";
}

<div class="container-fluid">
    <!-- En-tête avec sélecteur de période -->
    <div class="row mb-4">
        <div class="col-lg-8">
            <h1 class="h3 mb-0 text-gray-800">
                Statistiques médicales - @Model.HospitalCenterName
            </h1>
            <p class="text-muted">
                Période: @Model.FromDate.ToString("dd/MM/yyyy") au @Model.ToDate.ToString("dd/MM/yyyy") (@Model.Days jours)
            </p>
        </div>
        <div class="col-lg-4 text-end">
            <form method="get" class="d-inline-flex align-items-center justify-content-end">
                <div class="input-group input-group-sm">
                    <label for="days" class="input-group-text">Période</label>
                    <select class="form-select" id="days" name="days" onchange="this.form.submit()">
                        <option value="7" selected>7 jours</option>
                        <option value="30">30 jours</option>
                        <option value="90">90 jours</option>
                        <option value="180">6 mois</option>
                        <option value="365">1 an</option>
                    </select>
                </div>
                <a href="#" id="printStats" class="btn btn-sm btn-primary ms-2">
                    <i class="fas fa-print"></i> Imprimer
                </a>
            </form>
        </div>
    </div>

    <!-- Statistiques clés -->
    <div class="row">
        <!-- Nouveaux patients -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Nouveaux patients
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.NewPatientsCount</div>
                            <div class="text-xs text-muted">
                                @(Model.Days > 30 ? (Math.Round((double)Model.NewPatientsCount / (Model.Days / 30), 1)) : Model.NewPatientsCount) par mois
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-users fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Épisodes de soins -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Épisodes de soins
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.NewCareEpisodesCount</div>
                            <div class="text-xs text-muted">
                                dont @Model.CompletedCareEpisodesCount terminés
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-stethoscope fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Examens -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                Examens
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.NewExaminationsCount</div>
                            <div class="text-xs text-muted">
                                dont @Model.CompletedExaminationsCount réalisés
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-microscope fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Prescriptions -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Prescriptions
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.NewPrescriptionsCount</div>
                            <div class="text-xs text-muted">
                                dont @Model.DispensedPrescriptionsCount dispensées
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-prescription fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Graphiques statistiques -->
    <div class="row">
        <!-- Revenus journaliers -->
        <div class="col-lg-8 mb-4">
            <div class="card shadow">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Revenus journaliers</h6>
                </div>
                <div class="card-body">
                    <div class="chart-container" style="position: relative; height:300px;">
                        <canvas id="dailyRevenueChart"></canvas>
                    </div>
                    <div class="mt-3">
                        <div class="card mb-3">
                            <div class="card-body py-2">
                                <div class="row text-center">
                                    <div class="col-md-4">
                                        <h4>@Model.TotalRevenue.ToString("N0") FCFA</h4>
                                        <p class="mb-0 text-muted small">Revenu total</p>
                                    </div>
                                    <div class="col-md-4">
                                        <h4>@Model.CareRevenueAmount.ToString("N0") FCFA</h4>
                                        <p class="mb-0 text-muted small">Revenus des soins</p>
                                    </div>
                                    <div class="col-md-4">
                                        <h4>@Model.ExaminationRevenueAmount.ToString("N0") FCFA</h4>
                                        <p class="mb-0 text-muted small">Revenus des examens</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Revenus moyens</th>
                                        <th class="text-end">Par jour</th>
                                        <th class="text-end">Par semaine</th>
                                        <th class="text-end">Par mois</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>Total</td>
                                        <td class="text-end">@((Model.TotalRevenue / Model.Days).ToString("N0")) FCFA</td>
                                        <td class="text-end">@((Model.TotalRevenue / Model.Days * 7).ToString("N0")) FCFA</td>
                                        <td class="text-end">@((Model.TotalRevenue / Model.Days * 30).ToString("N0")) FCFA</td>
                                    </tr>
                                    <tr>
                                        <td>Soins</td>
                                        <td class="text-end">@((Model.CareRevenueAmount / Model.Days).ToString("N0")) FCFA</td>
                                        <td class="text-end">@((Model.CareRevenueAmount / Model.Days * 7).ToString("N0")) FCFA</td>
                                        <td class="text-end">@((Model.CareRevenueAmount / Model.Days * 30).ToString("N0")) FCFA</td>
                                    </tr>
                                    <tr>
                                        <td>Examens</td>
                                        <td class="text-end">@((Model.ExaminationRevenueAmount / Model.Days).ToString("N0")) FCFA</td>
                                        <td class="text-end">@((Model.ExaminationRevenueAmount / Model.Days * 7).ToString("N0")) FCFA</td>
                                        <td class="text-end">@((Model.ExaminationRevenueAmount / Model.Days * 30).ToString("N0")) FCFA</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Distribution des services et diagnostics -->
        <div class="col-lg-4 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Distribution des services</h6>
                </div>
                <div class="card-body">
                    <div class="chart-container" style="position: relative; height:180px;">
                        <canvas id="serviceTypeChart"></canvas>
                    </div>
                </div>
            </div>
            
            <div class="card shadow">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Diagnostics les plus fréquents</h6>
                </div>
                <div class="card-body">
                    <div class="chart-container" style="position: relative; height:180px;">
                        <canvas id="diagnosisChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistiques supplémentaires -->
    <div class="row">
        <div class="col-lg-12">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Statistiques supplémentaires</h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card mb-4">
                                <div class="card-header py-3">
                                    <h6 class="m-0 font-weight-bold text-primary small">Moyenne des services par jour</h6>
                                </div>
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table table-sm">
                                            <tbody>
                                                <tr>
                                                    <th>Nouveaux patients</th>
                                                    <td class="text-end">@(((double)Model.NewPatientsCount / Model.Days).ToString("N1"))</td>
                                                </tr>
                                                <tr>
                                                    <th>Nouveaux épisodes de soins</th>
                                                    <td class="text-end">@(((double)Model.NewCareEpisodesCount / Model.Days).ToString("N1"))</td>
                                                </tr>
                                                <tr>
                                                    <th>Épisodes terminés</th>
                                                    <td class="text-end">@(((double)Model.CompletedCareEpisodesCount / Model.Days).ToString("N1"))</td>
                                                </tr>
                                                <tr>
                                                    <th>Nouveaux examens</th>
                                                    <td class="text-end">@(((double)Model.NewExaminationsCount / Model.Days).ToString("N1"))</td>
                                                </tr>
                                                <tr>
                                                    <th>Examens réalisés</th>
                                                    <td class="text-end">@(((double)Model.CompletedExaminationsCount / Model.Days).ToString("N1"))</td>
                                                </tr>
                                                <tr>
                                                    <th>Nouvelles prescriptions</th>
                                                    <td class="text-end">@(((double)Model.NewPrescriptionsCount / Model.Days).ToString("N1"))</td>
                                                </tr>
                                                <tr>
                                                    <th>Prescriptions dispensées</th>
                                                    <td class="text-end">@(((double)Model.DispensedPrescriptionsCount / Model.Days).ToString("N1"))</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card mb-4">
                                <div class="card-header py-3">
                                    <h6 class="m-0 font-weight-bold text-primary small">Taux de conversion et d'efficacité</h6>
                                </div>
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table table-sm">
                                            <tbody>
                                                <tr>
                                                    <th>Taux de complétion des épisodes</th>
                                                    <td class="text-end">
                                                        @if (Model.NewCareEpisodesCount > 0)
                                                        {
                                                            <text>@(Math.Round((double)Model.CompletedCareEpisodesCount / Model.NewCareEpisodesCount * 100, 1))%</text>
                                                        }
                                                        else
                                                        {
                                                            <text>-</text>
                                                        }
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <th>Taux de réalisation des examens</th>
                                                    <td class="text-end">
                                                        @if (Model.NewExaminationsCount > 0)
                                                        {
                                                            <text>@(Math.Round((double)Model.CompletedExaminationsCount / Model.NewExaminationsCount * 100, 1))%</text>
                                                        }
                                                        else
                                                        {
                                                            <text>-</text>
                                                        }
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <th>Taux de dispensation des prescriptions</th>
                                                    <td class="text-end">
                                                        @if (Model.NewPrescriptionsCount > 0)
                                                        {
                                                            <text>@(Math.Round((double)Model.DispensedPrescriptionsCount / Model.NewPrescriptionsCount * 100, 1))%</text>
                                                        }
                                                        else
                                                        {
                                                            <text>-</text>
                                                        }
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <th>Revenu moyen par patient</th>
                                                    <td class="text-end">
                                                        @if (Model.NewPatientsCount > 0)
                                                        {
                                                            <text>@((Model.TotalRevenue / Model.NewPatientsCount).ToString("N0")) FCFA</text>
                                                        }
                                                        else
                                                        {
                                                            <text>-</text>
                                                        }
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <th>Revenu moyen par épisode</th>
                                                    <td class="text-end">
                                                        @if (Model.CompletedCareEpisodesCount > 0)
                                                        {
                                                            <text>@((Model.CareRevenueAmount / Model.CompletedCareEpisodesCount).ToString("N0")) FCFA</text>
                                                        }
                                                        else
                                                        {
                                                            <text>-</text>
                                                        }
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <th>Revenu moyen par examen</th>
                                                    <td class="text-end">
                                                        @if (Model.CompletedExaminationsCount > 0)
                                                        {
                                                            <text>@((Model.ExaminationRevenueAmount / Model.CompletedExaminationsCount).ToString("N0")) FCFA</text>
                                                        }
                                                        else
                                                        {
                                                            <text>-</text>
                                                        }
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Données pour les graphiques
            const dailyRevenueData = @Json.Serialize(Model.DailyRevenueData);
            const serviceTypeData = @Json.Serialize(Model.ServiceTypeDistribution);
            const diagnosisData = @Json.Serialize(Model.DiagnosisDistribution);
            
            // Graphique des revenus journaliers
            const ctxDaily = document.getElementById('dailyRevenueChart').getContext('2d');
            new Chart(ctxDaily, {
                type: 'bar',
                data: {
                    labels: dailyRevenueData.map(d => d.label),
                    datasets: [{
                        label: 'Revenu (FCFA)',
                        data: dailyRevenueData.map(d => d.value),
                        backgroundColor: 'rgba(28, 200, 138, 0.4)',
                        borderColor: 'rgba(28, 200, 138, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return value.toLocaleString('fr-FR') + ' FCFA';
                                }
                            }
                        }
                    },
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return context.parsed.y.toLocaleString('fr-FR') + ' FCFA';
                                }
                            }
                        }
                    }
                }
            });
            
            // Graphique de distribution des types de services
            const ctxService = document.getElementById('serviceTypeChart').getContext('2d');
            new Chart(ctxService, {
                type: 'doughnut',
                data: {
                    labels: serviceTypeData.map(d => d.label),
                    datasets: [{
                        data: serviceTypeData.map(d => d.value),
                        backgroundColor: serviceTypeData.map(d => d.color || getRandomColor()),
                        hoverBackgroundColor: serviceTypeData.map(d => d.color || getRandomColor()),
                        hoverBorderColor: "rgba(234, 236, 244, 1)",
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    cutout: '60%',
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                boxWidth: 12
                            }
                        }
                    }
                }
            });
            
            // Graphique des diagnostics les plus fréquents
            const ctxDiagnosis = document.getElementById('diagnosisChart').getContext('2d');
            new Chart(ctxDiagnosis, {
                type: 'bar',
                data: {
                    labels: diagnosisData.map(d => d.label),
                    datasets: [{
                        label: 'Occurrence',
                        data: diagnosisData.map(d => d.value),
                        backgroundColor: diagnosisData.map(d => d.color || getRandomColor()),
                        borderColor: diagnosisData.map(d => d.color || getRandomColor()),
                        borderWidth: 1
                    }]
                },
                options: {
                    indexAxis: 'y',
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            beginAtZero: true,
                            ticks: {
                                precision: 0
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });
            
            // Impression des statistiques
            document.getElementById('printStats').addEventListener('click', function(e) {
                e.preventDefault();
                window.print();
            });
        });
        
        // Fonction utilitaire pour générer des couleurs aléatoires
        function getRandomColor() {
            const letters = '0123456789ABCDEF';
            let color = '#';
            for (let i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }
    </script>
}

@section Styles {
    <style>
        .border-left-primary {
            border-left: 0.25rem solid #4e73df !important;
        }
        
        .border-left-success {
            border-left: 0.25rem solid #1cc88a !important;
        }
        
        .border-left-info {
            border-left: 0.25rem solid #36b9cc !important;
        }
        
        .border-left-warning {
            border-left: 0.25rem solid #f6c23e !important;
        }
        
        .text-gray-300 {
            color: #dddfeb !important;
        }
        
        .text-gray-800 {
            color: #5a5c69 !important;
        }
        
        .chart-container {
            position: relative;
            margin: auto;
        }
        
        /* Styles pour l'impression */
        @@media print {
            .no-print, form, select, button {
                display: none !important;
            }
            
            .shadow {
                box-shadow: none !important;
            }
            
            .card {
                break-inside: avoid;
            }
            
            .container-fluid {
                width: 100%;
                padding: 0;
            }
            
            body {
                padding: 0;
                margin: 0;
            }
            
            h1 {
                font-size: 18pt !important;
            }
            
            h6 {
                font-size: 12pt !important;
            }
            
            .col-lg-4, .col-lg-8, .col-lg-12 {
                width: 100%;
                flex: 0 0 100%;
                max-width: 100%;
            }
        }
    </style>
}